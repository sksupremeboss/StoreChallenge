use iacsd0924;

CREATE TABLE EMP
       (EMPNO INT(4) NOT NULL,
        ENAME varchar(10),
        JOB varchar(9),
        MGR INT(4),
        HIREDATE DATE,
        SAL DECIMAL(7, 2),
        COMM DECIMAL(7, 2),
        DEPTNO INT(2));

INSERT INTO EMP VALUES
        (7369, 'SMITH',  'CLERK',     7902,
        STR_TO_DATE('17-DEC-1980', '%d-%b-%Y'),  800, NULL, 20);
INSERT INTO EMP VALUES
        (7499, 'ALLEN',  'SALESMAN',  7698,
        STR_TO_DATE('20-FEB-1981', '%d-%b-%Y'), 1600,  300, 30);
INSERT INTO EMP VALUES
        (7521, 'WARD',   'SALESMAN',  7698,
        STR_TO_DATE('22-FEB-1981', '%d-%b-%Y'), 1250,  500, 30);
INSERT INTO EMP VALUES
        (7566, 'JONES',  'MANAGER',   7839,
        STR_TO_DATE('2-APR-1981', '%d-%b-%Y'),  2975, NULL, 20);
INSERT INTO EMP VALUES
        (7654, 'MARTIN', 'SALESMAN',  7698,
        STR_TO_DATE('28-SEP-1981', '%d-%b-%Y'), 1250, 1400, 30);
INSERT INTO EMP VALUES
        (7698, 'BLAKE',  'MANAGER',   7839,
        STR_TO_DATE('1-MAY-1981', '%d-%b-%Y'),  2850, NULL, 30);
INSERT INTO EMP VALUES
        (7782, 'CLARK',  'MANAGER',   7839,
        STR_TO_DATE('9-JUN-1981', '%d-%b-%Y'),  2450, NULL, 10);
INSERT INTO EMP VALUES
        (7788, 'SCOTT',  'ANALYST',   7566,
        STR_TO_DATE('09-DEC-1982', '%d-%b-%Y'), 3000, NULL, 20);
INSERT INTO EMP VALUES
        (7839, 'KING',   'PRESIDENT', NULL,
        STR_TO_DATE('17-NOV-1981', '%d-%b-%Y'), 5000, NULL, 10);
INSERT INTO EMP VALUES
        (7844, 'TURNER', 'SALESMAN',  7698,
        STR_TO_DATE('8-SEP-1981', '%d-%b-%Y'),  1500,    0, 30);
INSERT INTO EMP VALUES
        (7876, 'ADAMS',  'CLERK',     7788,
        STR_TO_DATE('12-JAN-1983', '%d-%b-%Y'), 1100, NULL, 20);
INSERT INTO EMP VALUES
        (7900, 'JAMES',  'CLERK',     7698,
        STR_TO_DATE('3-DEC-1981', '%d-%b-%Y'),   950, NULL, 30);
INSERT INTO EMP VALUES
        (7902, 'FORD',   'ANALYST',   7566,
        STR_TO_DATE('3-DEC-1981', '%d-%b-%Y'),  3000, NULL, 20);
INSERT INTO EMP VALUES
        (7934, 'MILLER', 'CLERK',     7782,
        STR_TO_DATE('23-JAN-1982', '%d-%b-%Y'), 1300, NULL, 10);

CREATE TABLE DEPT
       (DEPTNO INT(2),
        DNAME varchar(14),
        LOC varchar(13) );

INSERT INTO DEPT VALUES (10, 'ACCOUNTING', 'NEW YORK');
INSERT INTO DEPT VALUES (20, 'RESEARCH',   'DALLAS');
INSERT INTO DEPT VALUES (30, 'SALES',      'CHICAGO');
INSERT INTO DEPT VALUES (40, 'OPERATIONS', 'BOSTON');

CREATE TABLE BONUS
        (ENAME varchar(10),
         JOB   varchar(9),
         SAL   INT,
         COMM  INT);

CREATE TABLE SALGRADE
        (GRADE INT,
         LOSAL INT,
         HISAL INT);

INSERT INTO SALGRADE VALUES (1,  700, 1200);
INSERT INTO SALGRADE VALUES (2, 1201, 1400);
INSERT INTO SALGRADE VALUES (3, 1401, 2000);
INSERT INTO SALGRADE VALUES (4, 2001, 3000);
INSERT INTO SALGRADE VALUES (5, 3001, 9999);

CREATE TABLE DUMMY
        (DUMMY INT);

INSERT INTO DUMMY VALUES (0);

COMMIT;

EXIT

================================================================================================================================================================================


Database Assignment 1
Note : Use Emp, dept and salgrade table
1. To list all records with sal > 2000 and comm>200
2. To list all record with job=’Clerk’ or sal>2000
3. To list all the record with sal=1250 or 1100 or 2850
4. To list all employees with sal>1250 and <2850
5. To list all employees with name ends with AS
6. To list all employees with job starts with C and ends with K
7. To list all employees with job contains L at third position and
M at third last position
8. To list all the record with sal not equal to 1250 or 1100 or 2850
9. To list all employees with salnot >1250 and <2850
10. To list all employees with job starts with C , E at 3rd position and ends with K
11. To list all rows with comm is null
12. To list all employees with sal is null and name starts with ‘S’
13. To list all employees with job contains 5 characters
14. To list all employees with name contain ‘A’ at 1 position and job
Contains 5 characters

-----------------------------------------------------------------------------------------------------
Q2. Solve the following
1. Retrieve the details (Name, Salary and dept no) of the emp who are working in
department code 20, 30 and 40.
2. Display the total salary of all employees . Total salary will be calculated as
sal+comm+sal*0.10
3. List the Name and job of the emp who have joined before 1 jan 1986 and whose
salary range is between 1200and 2500. Display the columns with user defined Column
headers.
4. List the empno, name, and department number of the emp works under manager
with id 7698
5. List the name, job, and salary of the emp who are working in departments 10 and
30.
6. Display name concatenated with dept code separated by comma and space. Name
the column as ‘Emp info’.
7. Display the emp details who do not have manager.
8. Write a query which will display name, department no and date of joining of all
employee who were joined January 1, 1981 and March 31, 1983. Sort it based on date of
joining (ascending).
9. Display the employee details where the job contains word ‘AGE’ anywhere in the Job
11. List the details of the employee , whose names start with ‘A’ and end with ‘S’ or
whose names contains N as the second or third character, and ending with either ‘N’ or ‘S’.
12. List the names of the emp having ‘_’ character in their name.
Group functions
1. Display the Highest, Lowest, Total & Average salary of all employee. Label the columns
Maximum, Minimum, Total and Average respectively for each Department. Also round the
result to the nearest whole number.
2. Display Department no and number of managers working in that department. Label the
column as ‘Total Number of Managers’ for each department.
3. Get the Department number, and sum of Salary of all non managers where the sum is
greater than 20000.

-----------------------------------------------------------------------------------------------------

Why to use database
1. To manage the data easily, retrieval and storing of data is very easy
2. Sharing of data is possible across locations, and machines
3. Data is always secure.
4. Transaction is possible in databases
Types of databases
1. SQL
a. It allows to store data in structured manner
b. It supports transaction control, because it supports ACID(Atomicity,consistency,
isolation,Durability) property
c. Usually it is used in e-commerce applications, or banking applications
d. Examples ---MySQL, Oracle, PostgreSQL, SQL server
2. NoSQL
a. It allows to store unstructured data
b. It does not support transactions, It doesnot support ACID property, but it
supports CAP(Consistency, Availability,partition) principle
c. Usually it is used in social media application
d. Examples : MongoDB, Cassandra, CouchbaseDB
3. GraphDB
a. It allows to represent data in graph format
b. It is helpful to store network details, It Stroes the data in the form of nodes and
relations
c. Example : Neo4J
4. Memory database
a. It stores the data in RAM, hence retrieval data is fast.
b. But the size of data is limited
c. When you need to shutdown the machine, you need backup server
d. Usually used in research projects
e. Example: MemDB,VoltDB
MySQL
Types of statements
DQL Data Query Language select
DDL Data definition Language Create, alter, drop, truncate
DML Data Manipulation Language Insert, update, delete
DCL Data control language Grant, revoke
TCL Transaction Control Language Commit, rollback, savepoint
Transaction
1. A task which has multiple steps, and to complete the task either all should happen, or
none should happen
2. To support transaction control, we use ACID property
ACID
1. Atomicity
a. Atomic means single, and in database, transaction is always considered as
single task, so it supports atomicity
2. Consistency
a. If the data is always in the correct state after completion of the transaction,
b. If the balance in a/c is 5000 rs. And if we withdraw 2000 rs. Then always the
remaining balance will be 3000 rs.
3. Isolation
a. If any transaction is going on, then the intermediate changes will be visible to
only user who is performing the transaction, these intermediate changes will not
be visible to other clients, unless the transaction is completed,
4. Durability
a. If the application is consistent for longer period of time, then we say that it is
durable
To connect to database use Command line client
Or open cmd prompt, and give the following command
mysql -u user1 -p
enter password: pass1
To create database
 Mysql>Create database iacsddbda0924;
 Mysql> Create database if not exists iacsddbda0924;
To change the current database
Mysql>use iacsddbda0924
To load data in mysql
Mysql>source d:\mysql\demobldmysql.sql
To display list of table in the database
Mysql>show tables;
To display the list of databases
Mysql>show databases;
To see the list of columns in the table
desc emp
1. To display all records from emp table
Select * from emp;
2. To display empno,ename from emp
Select empno,ename from emp;
3. To display empno as Employee num ,ename as employee name from emp
To assign alias name to columns if the alias name contains space , then add it in
quotes( “/‘) otherwise quotes are optional
Select empno “Employee num”,ename “Employee name” from emp;
select empno,ename,sal Salary
 -> from emp;
4. Alias name for the table
Select * from emp e;
5. To display all employee with name jones
Select * from emp
Where ename=’jones’
6. To find all employees who joined on 1981-09-28
Select * from emp
Where hiredate =’ 1981-09-28’
7. To find all employees with sal >1800
Select * from emp
Where sal>1800;
8. To find all employees working in deptno either 10 or 20
Select * from emp where deptno in (10,20)
9. To find all employees with name either jones, miller or king
Select * from emp where ename in(‘jones,’miller’,’king’)
10. To find all employees who joined on either 1981-04-02 , 1981-09-28
Select * from emp where hiredate in (‘1981-04-02’,’ 1981-09-28’)
11. To find all employees with sal>=1500 and sal <= 3000
Select * from emp where sal>=1500 and sal <= 3000
Select * from emp where sal between 1500 and 3000
Operators in database
Arithmetic operators +, -, / , %, , **
Logical operators and , or, not
Relational operator >, <, >=,<=, = , !=, <>
In, between … and,like
[not] in If we want to check multiple values of
same column for equal to operator
Select * from
emp where
hiredate in
(‘1981-04-02’,’
1981-09-28’)
[not]
Between…and
If you want to check values in range, then
use between ….and, the given values are
inclusive
The first value < second value
Select * from
emp where sal
between 1500
and 3000
[not] Like To match the data with pattern, use like
operator
To design the pattern
%--> 0 or more characters
_ -→ 1 character
Select * from
emp where
ename like ‘A%’
Is [not] null To check the value is null select * from
emp where
comm is null or
comm=0;
12. To find all employees who have not joined on either 1981-04-02 , 1981-09-28
Select * from emp where hiredate not in (‘1981-04-02’,’ 1981-09-28’)
13. to find all employee who are not working in either deptno 20 or 30
Select * from emp where deptno not in (20,30)
14. To find all employees with salary not in range 1500 to 2200
Select * from emp where sal not between 1500 and 2200
15. To find all employees with name starts with ‘A’
Select * from emp where ename like ‘A%’
16. To find all employees with ename ends with n
Select * from emp where ename like ’%n’
17. To find all employees with ename starts with A and ends with N
Select * from emp where ename like ’A%n’
18. To find all employees with ename has l character at the 2nd position
Select * from emp where ename like ‘_l%’
19. To display all employees who has not received the commission
select * from emp where comm is null or comm=0;
20. To display all employees who has received the commission
select * from emp where comm is not null and comm!=0;
21. To display net sal=sal+comm
Select empno,ename,sal,comm,sal+ifnull(comm,0) netsal
From emp
22. Find all employees with name starts with either A or M
Select * from emp where ename like ‘A%’ or ename like ‘M%’
-----------------------------------------------------------------------------------------------------
